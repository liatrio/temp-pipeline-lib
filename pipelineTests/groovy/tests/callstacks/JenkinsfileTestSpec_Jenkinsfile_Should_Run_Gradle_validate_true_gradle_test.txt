   Jenkinsfile.run()
      Jenkinsfile.pipeline(groovy.lang.Closure)
         Jenkinsfile.agent(groovy.lang.Closure)
         Jenkinsfile.parameters(groovy.lang.Closure)
            Jenkinsfile.booleanParam({name=VALIDATE, defaultValue=true, description=Whether to run validation stage})
            Jenkinsfile.string({name=GRADLE_TASKS_OPTIONS, defaultValue=clean build test -i, description=Tasks and options for the gradle command})
         Jenkinsfile.options(groovy.lang.Closure)
            Jenkinsfile.logRotator({numToKeepStr=10})
            Jenkinsfile.buildDiscarder(null)
            Jenkinsfile.timestamps()
         Jenkinsfile.triggers(groovy.lang.Closure)
            Jenkinsfile.pollSCM(*/5 * * * *)
         Jenkinsfile.stages(groovy.lang.Closure)
            Jenkinsfile.stage(Checkout, groovy.lang.Closure)
               Jenkinsfile.steps(groovy.lang.Closure)
                  Jenkinsfile.deleteDir()
                  Jenkinsfile.checkout(groovy.lang.Closure)
            Jenkinsfile.stage(validate, groovy.lang.Closure)
               Jenkinsfile.when(groovy.lang.Closure)
                  Jenkinsfile.expression(groovy.lang.Closure)
               Jenkinsfile.steps(groovy.lang.Closure)
                  Jenkinsfile.script(groovy.lang.Closure)
                     Jenkinsfile.validateDeclarativePipeline(exampleJobs/parallel/Jenkinsfile)
                     Jenkinsfile.validateDeclarativePipeline(Jenkinsfile)
            Jenkinsfile.stage(build, groovy.lang.Closure)
               Jenkinsfile.steps(groovy.lang.Closure)
                  Jenkinsfile.tool({name=GRADLE_3, type=hudson.plugins.gradle.GradleInstallation})
                  Jenkinsfile.withEnv([GRADLE_HOME=GRADLE_3_HOME], groovy.lang.Closure)
                     Jenkinsfile.withEnv([PATH=/some/path:GRADLE_3_HOME/bin], groovy.lang.Closure)
                        Jenkinsfile.echo(GRADLE_HOME=GRADLE_3_HOME)
                        Jenkinsfile.echo(PATH=/some/path:GRADLE_3_HOME/bin)
                        Jenkinsfile.sh(gradle test)
         Jenkinsfile.post(groovy.lang.Closure)
            Jenkinsfile.always(groovy.lang.Closure)
               Jenkinsfile.echo(pipeline unit tests completed - recording JUnit results)
               Jenkinsfile.junit(build/test-results/**/*.xml)
            Jenkinsfile.success(groovy.lang.Closure)
               Jenkinsfile.echo(pipeline unit tests PASSED)
            Jenkinsfile.failure(groovy.lang.Closure)
            Jenkinsfile.changed(groovy.lang.Closure)
               Jenkinsfile.echo(pipeline unit tests results have CHANGED)
            Jenkinsfile.unstable(groovy.lang.Closure)
